---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: pv-audiobook
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: smb-reader
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
  csi:
    driver: smb.csi.k8s.io
    readOnly: true
    # volumeHandle format: {smb-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: Audiobook
    volumeAttributes:
      source: "//192.168.1.52/Audiobook" # Change this to your SMB IP and share name
    nodeStageSecretRef:
      name: smbcreds-reader
      namespace: kube-system

# PersistentVolumeClaim for audiobooks data
# This PVC will be used to store audiobook files
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiobookshelf-claim-audiobooks
  namespace: audiobookshelf
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: pv-audiobook
  storageClassName: smb-reader

# PersistentVolumeClaim for application configuration
# Stores app config files (settings, etc.)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiobookshelf-claim-config
  namespace: audiobookshelf
spec:
  storageClassName: freenas-nfs-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

# PersistentVolumeClaim for metadata
# Used for storing metadata generated by the app
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audiobookshelf-claim-metadata
  namespace: audiobookshelf
spec:
  storageClassName: freenas-nfs-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi